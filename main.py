import logging
import os
import yt_dlp
import instaloader
from tiktokapipy.api import TikTokAPI
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, FSInputFile
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
DOWNLOAD_DIR = "downloads"
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å YouTube
def download_video(url: str):
    options = {
        'outtmpl': f'{DOWNLOAD_DIR}/%(title)s.%(ext)s',
        'noplaylist': True,
        'quiet': True,
        'merge_output_format': 'mp4',
    }
    with yt_dlp.YoutubeDL(options) as ydl:
        info = ydl.extract_info(url, download=True)
        title = info.get("title", "video")
        file_path = ydl.prepare_filename(info)
        return file_path, title

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ –∏–∑ Instagram
def download_instagram_photo(url: str):
    loader = instaloader.Instaloader(dirname_pattern=DOWNLOAD_DIR, filename_pattern="{shortcode}")
    try:
        shortcode = url.split("/")[-2]
        loader.download_post(instaloader.Post.from_shortcode(loader.context, shortcode), target=DOWNLOAD_DIR)
        for file in os.listdir(DOWNLOAD_DIR):
            if file.startswith(shortcode) and file.endswith(".jpg"):
                return os.path.join(DOWNLOAD_DIR, file)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–æ—Ç–æ Instagram: {e}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ TikTok
def download_tiktok(url: str):
    try:
        with TikTokAPI() as api:
            video = api.video(url)
            video_path = os.path.join(DOWNLOAD_DIR, f"{video.id}.mp4")
            with open(video_path, "wb") as f:
                f.write(video.bytes())
            return video_path
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ TikTok: {e}")
        return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Å—Å—ã–ª–∫–∞–º–∏
@dp.message(lambda message: message.text)
async def handle_message(message: Message):
    url = message.text

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = (
        f"üë§ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:**\n"
        f"üîπ ID: `{message.from_user.id}`\n"
        f"üîπ Username: @{message.from_user.username if message.from_user.username else '–ù–µ—Ç'}\n"
        f"üîπ –ò–º—è: {message.from_user.first_name}\n"
        f"üîπ –§–∞–º–∏–ª–∏—è: {message.from_user.last_name if message.from_user.last_name else '–ù–µ—Ç'}\n"
        f"üîπ –Ø–∑—ã–∫: {message.from_user.language_code}\n"
        f"üîπ –ß–∞—Ç ID: `{message.chat.id}`\n"
        f"üîπ –ß–∞—Ç —Ç–∏–ø: {message.chat.type}\n"
        f"üîπ –ë–æ—Ç?: {'–î–∞' if message.from_user.is_bot else '–ù–µ—Ç'}\n"
        f"üîπ –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {url}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    if ADMIN_ID:
        await bot.send_message(ADMIN_ID, user_info, parse_mode="Markdown")

    if "instagram.com/p/" in url or "instagram.com/reel/" in url:
        await message.answer("üì∑ –°–∫–∞—á–∏–≤–∞—é —Ñ–æ—Ç–æ –∏–∑ Instagram...")
        file_path = download_instagram_photo(url)
        if file_path:
            photo = FSInputFile(file_path)
            await message.answer_photo(photo, caption="‚úÖ –í–∞—à–µ —Ñ–æ—Ç–æ Instagram")
            os.remove(file_path)
        else:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –∏–∑ Instagram.")

    elif "tiktok.com" in url:
        await message.answer("üé• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ TikTok...")
        file_path = download_tiktok(url)
        if file_path:
            video = FSInputFile(file_path)
            await message.answer_video(video)
            os.remove(file_path)
        else:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ TikTok-–≤–∏–¥–µ–æ.")

    elif any(site in url for site in ["youtube.com", "youtu.be", "fb.watch"]):
        await message.answer("üîÑ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        try:
            file_path, title = download_video(url)
            video = FSInputFile(file_path)
            await message.answer_video(video, caption=f"üé¨ **{title}**")
            os.remove(file_path)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ.")

    else:
        await message.answer("‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube, TikTok –∏–ª–∏ Instagram.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞: —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
@dp.message(lambda message: str(message.from_user.id) == ADMIN_ID and message.text == "/admin")
async def admin_panel(message: Message):
    files = os.listdir(DOWNLOAD_DIR)
    file_list = "\n".join(files) if files else "–ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤."
    text = f"üëë **–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞**\nüìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:\n{file_list}"
    await message.answer(text, parse_mode="Markdown")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    if ADMIN_ID:
        try:
            await bot.send_message(ADMIN_ID, "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")

    dp.message.register(handle_message)
    dp.message.register(admin_panel)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
